<?php

namespace App\Http\Controllers;
use App\vulnerability;
use Illuminate\Http\Request;

class vulnerabilityController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $dtvulnerability = vulnerability::paginate(20);
        return view('vulnerability.data-vulnerability',compact('dtvulnerability'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('vulnerability.create-vulnerability');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        vulnerability::create([

            'nama' => $request ->nama,

        ]);
        return redirect('data-vulnerability');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $vul = vulnerability::findorfail($id);
        return view('vulnerability.edit-vulnerability',compact('vul'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $vul = vulnerability::findorfail($id);
        $vul->update($request->all());
        return redirect('data-vulnerability');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $vul = threat::findorfail($id);
        $vul->delete();
        return back();
    }
}
